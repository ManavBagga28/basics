name: Deploy Catalog Service

on:
  pull_request:
    types: [closed]
    branches:
      - main
    if: github.event.pull_request.merged == true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image for Catalog Service
      run: |
        IMAGE_TAG=latest
        REPOSITORY_URI=412381772129.dkr.ecr.eu-north-1.amazonaws.com/catalog-repository

        # Build Docker image
        docker build -t $REPOSITORY_URI:$IMAGE_TAG ./catalog_service

        # Push the Docker image to ECR
        docker push $REPOSITORY_URI:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.merged == true
    environment:
      name: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: SSH into EC2 and Deploy Docker Container
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Log into ECR from EC2
          aws ecr get-login-password --region us-west-1 | sudo docker login --username AWS --password-stdin 412381772129.dkr.ecr.eu-north-1.amazonaws.com

          # Pull the latest catalog image from ECR
          sudo docker pull 412381772129.dkr.ecr.eu-north-1.amazonaws.com/catalog-repository:latest

          # Stop and remove old containers
          sudo docker stop catalog || true
          sudo docker rm catalog || true

          # Run the new catalog container
          sudo docker run -d -p 9001:9001 412381772129.dkr.ecr.eu-north-1.amazonaws.com/catalog-repository:latest